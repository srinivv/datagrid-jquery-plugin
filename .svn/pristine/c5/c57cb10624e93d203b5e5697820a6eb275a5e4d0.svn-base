package com.cisco.apas.service;

import java.util.Date;
import java.util.List;

import com.cisco.apas.entity.Deal;
import com.cisco.apas.entity.DealException;
import com.cisco.apas.entity.Node;
import com.cisco.apas.entity.NodeCreation;
import com.cisco.apas.entity.Partner;
import com.cisco.apas.entity.PartnerException;
import com.cisco.apas.entity.ProductHierarchyVO;
import com.cisco.apas.entity.Rule;
import com.cisco.apas.entity.SKU;
import com.cisco.apas.entity.ServiceHierarchyVO;

public interface APASService {

	// Node methods..
	public Node getNode(Integer nodeId);
	public List<Node> getNodesForSKU(String searchString, String type, int start, int end);
	public List<Node> getAllNodes(int start,int end,String userId);
	public List<SKU> getSkusForNode(Integer nodeId,Integer start, Integer end);
	
	public NodeCreation getProductDetails(String inputProductIntial,String inputProductFamily,String inputPageNo);
	public NodeCreation getServiceHierarchy(String inputServiceCategory, String inputServiceProgram, String inputServiceLevel, String inputPageNo);
	public List<ProductHierarchyVO> getListOfSkusForProduct(String productFamily, String searchString);
	public List<ServiceHierarchyVO> getListOfSkusForService(String serviceLvl,String searchString);

	public String createNode(Node node);
	public String updateNode(Node node);
	public boolean deleteNode(Integer[] nodeIds);
	
	// Rule methods...
	public int getRulesCount();
	public List<Rule> getAllRules(int start, int end, int pageSize);
	public List<Rule> getRulesForNode(Integer integer, Integer start, Integer end);
	public String getQualification(String qualCode);
	public Rule getRule(long ruleId);
	public void saveRule(String userID, final Rule rule, final Long nodeID);
	public boolean deleteRule(Integer[] ruleIds);
	
	// Partner Exception methods...
	public int getPartnerExceptionCount();
	public List<PartnerException> getAllPExceptions(int start, int end, int pageSize);
	public String savePartnerException(String userId,String partnerId,String exceptionDesc,String status,Date effDate,Date endDate,String[] nodeList);
	public boolean deletePartnerException(String[] nodeList,String[] pdbList);
	public PartnerException getPartnerException(long pdbBeId, long nodeId);
	public int updatePartnerException(PartnerException partnerException);
	public List<Partner> getPartners(String searchTerm);
	
	// Deal Exception methods..
	public int getDealExceptionCount();
	public List<DealException> getAllDExceptions(int start, int end, int pageSize);
	public String saveDealException(String userId,String dealId,String exceptionDesc,String status,Date effDate,Date endDate,String[] nodeList);
	public boolean deleteDealException(String[] nodeList,String[] dealList);
	public DealException getDealException(long dealId, long nodeId);
	public int updateDealException(DealException dealException);
	public List<Deal> getDeals(String searchTerm);

}
