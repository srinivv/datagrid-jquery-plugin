	
	
		/**
    	 * Create a functional object called ScenarioComponents
    	 */
    	var ScenarioComponents = function (id,name,preCondition,postCondition,preConditionText,postConditionText,value,type) {
    	    this.id = id;
    	    this.name = name;
    	    this.preCondition = preCondition;
    	    this.postCondition = postCondition;
    	    this.preConditionText=preConditionText;
    	    this.postConditionText=postConditionText;
    	    this.value=value;
    	    this.type=type;
    	};
    	
    	/**
    	 * Array Prototype for Setting the conditions for first Object in the array
    	 */
    	ScenarioComponents.prototype.setFirstObjCondition = function (startTag,endTag){  
    	}    	
    	/**
    	 * Update the scenario components
    	 */
    	ScenarioComponents.prototype.updateMe = function (id,text){    		
    		this.id = id;
    		this.name=text;
    	}	
		
    	/**
    	 * Array Prototype for Setting the conditions for Last Object in the array
    	 */
    	ScenarioComponents.prototype.setLastObjCondition = function (startTag,endTag){
    		this.preCondition="OR";
    		this.postCondition="CLOSE_YELLOW";
    		//console.log(this);	    	
    	}
    	/**
    	 * Array Prototype for Setting the conditions for first Object in the array
    	 */
    	ScenarioComponents.prototype.setInBetweenObjCondition = function (){    		
    		 	
    	}  
    	
    	/*
    	 * Clears the Row UI.
    	 */
    	Array.prototype.clearUIRow = function (targetDOM){    		
    		$(targetDOM).children('.nodelayer').remove();
    	}    	
    	
    	/**
    	 * Utility method to convert the Data Holder object
    	 * into JSON representation.
    	 * Call this anytime you want to build a JSON out
    	 * of an array
    	 */
    	Array.prototype.representJSON = function (targetDOM) {    	    		
    		return JSON.stringify(this);
    	}   
    	
    	/**
    	 * This method will be called to ignore duplicate elements
    	 */
    	function rule_IgnoreDuplicatesForComponents(dataholder,componentSelected,valueToAdded){
    		
    		/**
    		 * Iterate through the dataholder to find if the id is present,otherwise stop the propagation
    		 */
    		//Do a null check.
    		if(dataholder !==undefined && dataholder.length !== null && dataholder.length > 0){
    			//Use Jquery Grep function to find if the value is already present.
    			var result = $.grep(dataholder, function(e){ return e.id == valueToAdded; });
    			if(result.length ==1){    				
    				return true;    				
    			}
    		}else{
    			//alert('Not deifned so crate one');
    			//Create a new dataHolder now for line items to be added.
    			var dataHolder = new Array();       			
    			//Associate the data holder to the DOM
    			$(componentSelected).data("dataHolder",dataHolder);
    		}
    	}
    	/*
    	 *Clears array
    	 */    	
    	Array.prototype.clear = function() {
    	    this.splice(0, this.length);
    	}
    	
    	/**Do a null check for selected components
    	 * Otherwise show a script message.
    	 */
    	
    	function isScenarioSelected(obj,event){    		
		 	//Just a null check
		   if(obj == undefined || obj.length == null){
			   alert("Hello buddy :) We can't add things randomly.Select a target component in the Scenario and try again.Happy Ruling");
			   event.stopImmediatePropagation();
			   return true;
		   }		  
    	}    	
    	
    	/**
    	 * This is meant for Partner in the scenario .
    	 * If the user has selected Distributor in partner type,show
    	 * Distributor.Els show the Partner in this component.
    	 */
    	Array.prototype.updateMe_Array = function (old_Id,new_Id,new_Text){
    		//alert('New Id-->' + new_Id);
    		//Grep to get the scenario object using old_id
    		var result = $.grep(this, function(e){ return e.id == old_Id; });
    		//console.log(result[0]);
    		//Value found..hence set the new value
    		if (result.length == 1) {
    			result[0].id=new_Id;
    			result[0].name=new_Text;
    		}	
    	}    	
    	/**
    	 * Fix Scenario preconnector details
    	 * @param targetDOM
    	 */
    	Array.prototype.fixScenarioPreConnector = function (){ 
    		$len = this.length;
    		 if($len > 0) {              	
              	this[$len - 1].postConnector = "AND"; 
              }
    	}    
    	
    	
   
	
    