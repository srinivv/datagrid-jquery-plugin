var nodelist = [];

var partnerGrid;
var dealGrid;

$(document).ready(function() {
	
	$(".datepicker").datepicker();

	$(".apasDatePick").datepicker();
	
	$(".addMoreExp").live("click", function(){
		$(this).hide();
		$('#searchExceptionresult').empty();
		$('#searchDExceptionresult').empty();
		$('.partnerSearchOutter').slideDown();
	});
	
	$(".addnodetoExp , .cancelnodeExp").live("click", function(){
		$('#searchException').val('');
		$('#searchDException').val('');
		$('.addMoreExp').show();
		$('.partnerSearchOutter').slideUp();
		$('.addnodetoExp').hide();
		$('.buttonsArea').slideUp();
	});
		  
	$(".searchPro").click(function(){		
		if($('#createNodeArea').text()=='Search Node')		   
			$(".createOuter").slideToggle();
		
		$(".existingRulesArea").slideUp();
		$(".myNodeRuleArea").slideUp();
		$(".searchRulesArea").slideDown();
	});
		  
	
			
	// Click event - Save Partner Exception
	$("#savePartnerException").live("click",function() {
				
		var nodesToException = new Array();
		$('#nodeList li').each(function(){
			var node =  new Object();
			node.item = $(this).find('input#nodeId').val();
			//console.log(node.item);
			nodesToException.push(node);
		});
		
		var partnerId = $("#partnerId").val();
		var desc = $("#description").val();
		var startDate = $("#startDate").val();
		var endDate = $("#endDate").val();
				
		if (!(partnerId.length > 0)) {
			$(".partnerError").show();
			$(".dateError").hide();
			$(".noNodesError").hide();
			$("#partnerErrorMsg").focus();
			return;
		}
					
		if (!(startDate.length > 0)) {
			$(".dateError").show();
			$(".partnerError").hide();
			$(".noNodesError").hide();
			$("#partnerErrorMsg").focus();
			return;
		}

		if ($.isEmptyObject(nodesToException)) {
			$(".noNodesError").show();
			$(".partnerError").hide();
			$(".dateError").hide();
			$("#partnerErrorMsg").focus();
			return;
		}
		var returnData = new Object();
		returnData.nodeList = nodesToException;
		returnData.partnerId = partnerId;
		returnData.description = desc;
		returnData.startDate = startDate;
		returnData.endDate = endDate;
		
					
		$.getJSON("partnerException_save.do", { nodes: JSON.stringify(returnData)  }, function(response) {
			if (response.status === "success") {
				$(".partnerformarea").slideUp(); 
				$(".partnersuccesArea").show();
			} else {
				$(".unknowError").show();
				$("#nodeErrorMsg").focus();
			}
		});
	});


	// Click event - Update Partner Exception
	$("#updatePartnerException").live("click",function() {
				
		var pdbGeoId = $("#pdbGeoId").val();
		var nodeId = $("#nodeId").val();
		var partnerName = $("#partnerName").val();
		var description = $("#description").val();
		var startDate = $("#startDate").val();
		var endDate = $("#endDate").val();
				
		$("#partnerErrorMsg").show();
					
		if (!(partnerName.length > 0)) {
			$(".partnerError").show();
			$(".dateError").hide();
			$("#partnerErrorMsg").focus();
			return;
		}
		
		if (!(startDate.length > 0)) {
			$(".dateError").show();
			$(".partnerError").hide();
			$("#partnerErrorMsg").focus();
			return;
		}
					
		$.getJSON("partnerException_update.do", { pdbGeoId: pdbGeoId, nodeId: nodeId, partnerName: partnerName, startDate: startDate, endDate: endDate, description: description }, function(response) {

			$("#partnerErrorMsg").hide();
						
			if (response.status === "success") {
				$(".partnerformarea").slideUp(); 
				$(".partnersuccesArea").show();
			} else {
				$(".unknowError").show();
				$("#nodeErrorMsg").focus();
			}
		});
	});

	$(".editpartner").live("click", function(){
		$(".partnerformarea").slideDown(); 
		$(".partnersuccesArea").slideUp();
	});
			
			
	// Click event for save deal exception 
	$("#saveDealException").live("click",function() {
				
		var nodesToException = new Array();
		$('#nodeDList li').each(function(){
			var node =  new Object();
			node.item = $(this).find('input#nodeDId').val();
			//console.log('items : ' + node.item);
			nodesToException.push(node);
		});
					
		var dealId = $("#dealId").val();
		var desc = $("#description").val();
		var startDate = $("#startDate").val();
		var endDate = $("#endDate").val();
				
		if (!(dealId.length > 0)) {
			$(".dealError").show();
			$(".dateError").hide();
			$(".noNodesError").hide();
			$("#dealErrorMsg").focus();
			return;
		}
					
		if (!(startDate.length > 0)) {
			$(".dateError").show();
			$(".dealError").hide();
			$(".noNodesError").hide();
			$("#dealErrorMsg").focus();
			return;
		}

		if ($.isEmptyObject(nodesToException)) {
			$(".noNodesError").show();
			$(".partnerError").hide();
			$(".dateError").hide();
			$("#partnerErrorMsg").focus();
			return;
		}

		var returnData = new Object();
		returnData.nodeList = nodesToException;
		returnData.dealId = dealId;
		returnData.description = desc;
		returnData.startDate = startDate;
		returnData.endDate = endDate;
					
		//console.log(JSON.stringify(returnData));
					
		$.getJSON("dealException_save.do", { nodes: JSON.stringify(returnData)  }, function(response) {
			if (response.status === "success") {
				$(".partnerformarea").slideUp(); 
				$(".partnersuccesArea").show();
			} else {
				$(".unknowError").show();
				$("#nodeErrorMsg").focus();
			}
		});
					
	});
		    	
	// Click event for edit Partner Exception
	$("#updateDealException").live("click",function() {
				
		var dealId = $("#dealId").val();
		var nodeId = $("#nodeId").val();
		var dealName = $("#dealName").val();
		var description = $("#description").val();
		var startDate = $("#startDate").val();
		var endDate = $("#endDate").val();
				
		$("#dealErrorMsg").show();
		if (!(dealName.length > 0)) {
			$(".dealError").show();
			$(".dateError").hide();
			$("#dealErrorMsg").focus();
			return;
		}
		
		if (!(startDate.length > 0)) {
			$(".dateError").show();
			$(".dealError").hide();
			$("#dealErrorMsg").focus();
			return;
		}

		$.getJSON("dealException_update.do", { dealId: dealId, nodeId: nodeId, dealName: dealName, startDate: startDate, endDate: endDate, description: description }, function(response) {

			$("#dealErrorMsg").hide();
			if (response.status === "success") {
				$(".partnerformarea").slideUp(); 
				$(".partnersuccesArea").show();
			} else {
				$(".unknowError").show();
				$("#nodeErrorMsg").focus();
			}
		});
	});

	$(".editDeal").live("click", function(){
		$(".partnerformarea").slideDown(); 
		$(".partnersuccesArea").slideUp();
	});			
			
			
	// Auto complete event for exception search
	$( "#searchException" ).autocomplete({
		minLength: 3,
        search: function(event, ui) { 
        	$('.loader').hide();
            $(this).addClass('loading');
        },
        open: function(event, ui) {
        	$('.loader').hide();
            $(this).removeClass('loading');
        },
		source:   function (request, response) {
            $.getJSON("node_skus.do", { term: $( "#searchException" ).val(), searchType: $("#selectExceptionSKU option:selected").val() }, response);
        }, 
		select: function( event, ui ) {
			$( "#searchException" ).val(ui.item.value);
	        return false;
		}
	});
	
	// Click event - search exceptions
	$("#searchExceptionbutton").click(function() {
		
		$("#searchExceptionresult").datagrid({
			source : 'node_searchresult.do',
			template : 'create-exception-search-results-template',
			pagination : true,
			params : {	searchString: $("#searchException").val(), searchType: $("#selectExceptionSKU").val() }
		});
		
		
		$('.myNodeRuleArea').slideUp();
		$('.addnodestepArea').slideUp();
		$('.existingRulesArea').slideUp();
		$('.searchRulesArea').slideDown();
		$('.searchFilterOption').slideDown();
		$('.skuSearchResult').slideDown();
		$('.buttonsArea').slideDown();
		
			
	});
	
	
	// Auto complete event for search deal exceptions
	$( "#searchDException" ).autocomplete({
			minLength: 3,
	        search: function(event, ui) { 
	        	$('.loader').hide();
	            $(this).addClass('loading');
	        },
	        open: function(event, ui) {
	        	$('.loader').hide();
	            $(this).removeClass('loading');
	        },
			source:   function (request, response) {
	            $.getJSON("node_skus.do", { term: $( "#searchDException" ).val(), searchType: $("#selectDExceptionSKU option:selected").val() }, response);
	        }, 
			select: function( event, ui ) {
				$( "#searchDException" ).val(ui.item.value);
		        return false;
			}
	});
		    
	// Click event for search deal exception
	$("#searchDExceptionbutton").click(function() {

		$("#searchDExceptionresult").datagrid({
			source : 'node_searchresult.do',
			template : 'create-exception-search-results-template',
			pagination : true,
			params : {	searchString: $("#searchDException").val(), searchType: $("#selectDExceptionSKU").val() }
		});
		
		

		$('.myNodeRuleArea').slideUp();
		$('.addnodestepArea').slideUp();
		$('.existingRulesArea').slideUp();
		$('.searchRulesArea').slideDown();
		$('.searchFilterOption').slideDown();
		$('.skuSearchResult').slideDown();
		$('.buttonsArea').slideDown();
		
	});
			
	
		    
	// Select box 
	$(".moreCategoriesSelect").selectbox();
	
	$(".morepartner").live("click", function(){
		$(".partnerformarea").slideDown(); 
		$(".partnersuccesArea").slideUp();
		
		$("#partnerId").val("");
		$("#dealId").val("");
		$("#description").val("");
		$("#startDate").val("");
		$("#endDate").val("");
	});
	
	// Check all boxes
	$('.selectAllPartner').live("click", function () {
		$("input[type='checkbox']").attr('checked', $('.selectAllPartner').is(':checked')); 
		togglePartnerLinks();
	});
	$('.selectAllDeal').live("click", function () {
		$("input[type='checkbox']").attr('checked', $('.selectAllDeal').is(':checked'));
		toggleDealLinks();
	});
	
	// On select of any one check boxes in view nodes - enable delete all / partner and deal exception buttons
	$('.partnerSelector').live("change", function () {
		togglePartnerLinks();
	});
	
	$('.dealSelector').live("change", function () {
		toggleDealLinks();
	});
	
	$('.checkall').live("click", function () {
		$("input[type='checkbox']").attr('checked', $('.checkall').is(':checked'));
		toggleAddNodes();
	});
	
	$('.mycheckbox').live("change", function () {
		toggleAddNodes();
	});
});

function removeSelectedNode(lineId) {
	fancyConfirm("Are you sure you want to delete the Node?", function(confirmed) {
		if (confirmed) {
			$("#"+lineId).remove();
		}
	});
}

function getNodeList(form) {
	
	var element = "";
	  
	$.each($("input[name='partnerSearch']:checked"), function() { 
				var nodename=$(this).data('name');
				var nodeid=$(this).data('id');
				var okToAdd = true;
				$('#nodeList li').each(function(){
					var node =  new Object();
					node.item = $(this).find('input#nodeId').val();
					if(node.item == nodeid){
						okToAdd = false;
					}
				});	
				if(okToAdd){
				element+='<li><a href=#>'+nodename+'<span></span></a>'+'<input type=hidden id=nodeName name=nodeName value="'+nodename+'"/>'+
	                 '<input type=hidden id=nodeId name=nodeId value="'+nodeid+'"/></li>';
				}
	});  
	
	$("#nodeList").append(element);
	
}

function deletePartnerException(pdbgeoId,nodeId) {
	
	var pdbIds = new Array();
	var nodeIds = new Array();
	
	var node =  new Object();
	node.item = nodeId;
	
	var pdb = new Object();
	pdb.item = pdbgeoId;
	
	nodeIds.push(node);
	pdbIds.push(pdb);
	
	var returnData = new Object();
	returnData.pdbIds = pdbIds;
	returnData.nodeIds = nodeIds;
	
	fancyConfirm("Are you sure you want to delete the partner exception?", function(confirmed) {
		
		if (confirmed) {
			$.getJSON("partnerException_delete.do", { exceptions: JSON.stringify(returnData)  }, function(response) {
			if (response.status === "success") {
				$(".messageSuccess").show();
				$("#nodeErrorMsg").focus();
			} else {
				$(".unknowError").show();
				$("#nodeErrorMsg").focus();
			}
			reloadPartnerGrid();
			});
		}
	});
}

function deleteAllPartner(){
var nodeIds = new Array();
var pdbIds = new Array();
    $.each($("input[name='partnerSelector']:checked"), function() { 
    	var node = new Object();
    	node.item = $(this).val();
    	nodeIds.push(node);
    	var pdb = new Object();
    	pdb.item = $(this).data('pdbid');
    	pdbIds.push(pdb);
    }); 
    
    var returnData = new Object();
    returnData.pdbIds = pdbIds;
	returnData.nodeIds = nodeIds;
	
	fancyConfirm("Are you sure you want to delete the partner exception?", function(confirmed) {
		
		if (confirmed) {	
			$.getJSON("partnerException_delete.do", { exceptions: JSON.stringify(returnData)  }, function(response) {
				if (response.status === "success") {
					$(".messageSuccess").show();
					$(".messageSuccess").fadeOut(2000);
					$("#nodeErrorMsg").focus();
					
				} else {
					$(".unknowError").show();
					$(".unknowError").fadeOut(2000);
					$("#nodeErrorMsg").focus();
				}
				//Reload data grid
				reloadPartnerGrid();
				
			});
		}
	});
}

function deleteDealException(dealId, nodeId) {
	
	var dealIds = new Array();
	var nodeIds = new Array();
	
	var node =  new Object();
	node.item = nodeId;
	
	var deal = new Object();
	deal.item = dealId;
	
	nodeIds.push(node);
	dealIds.push(deal);
	
	var returnData = new Object();
	returnData.dealIds = dealIds;
	returnData.nodeIds = nodeIds;
	
	fancyConfirm("Are you sure you want to delete the deal exception?", function(confirmed) {
		
		if (confirmed) {
	
			$.getJSON("dealException_delete.do", { exceptions:JSON.stringify(returnData)  }, function(response) {
				if (response.status === "success") {
					$(".messageSuccess").show();
					$("#nodeErrorMsg").focus();
				} else {
					$(".unknowError").show();
					$("#nodeErrorMsg").focus();
				}
				reloadDealGrid();
			});
			
		}
	});
	
}

function deleteAllDeal(){
	var nodeIds = new Array();
	var dealIds = new Array();
	    $.each($("input[name='dealSelector']:checked"), function() { 
	    	var node = new Object();
	    	node.item = $(this).val();
	    	nodeIds.push(node);
	    	var deal = new Object();
	    	deal.item = $(this).data('dealid');
	    	dealIds.push(deal);
	    }); 
	    
	    var returnData = new Object();
	    returnData.dealIds = dealIds;
		returnData.nodeIds = nodeIds;
		
		fancyConfirm("Are you sure you want to delete the deal exception?", function(confirmed) {
			
			if (confirmed) {
		
				$.getJSON("dealException_delete.do", { exceptions: JSON.stringify(returnData)  }, function(response) {
					if (response.status === "success") {
						$(".messageSuccess").show();
						$(".messageSuccess").fadeOut(2000);
						$("#nodeErrorMsg").focus();
					} else {
						$(".unknowError").show();
						$(".unknowError").fadeOut(2000);
						$("#nodeErrorMsg").focus();
					}
					
					//Reload data grid
					reloadDealGrid();
				});
			}
		});
	}

function editPartnerException(id,nodeId) {
	//alert('editPartnerException : ' + id );
	$('<input />').attr('type', 'hidden').attr('name', 'pdbBeId').attr('value', id).appendTo('#partnerException');
	$('<input />').attr('type', 'hidden').attr('name', 'nodeId').attr('value', nodeId).appendTo('#partnerException');
	$("#partnerException").attr("action", "partnerException_edit.do");
	$('#partnerException').submit();
	
}



function editDealException(dealId,nodeId) {
	//alert('editDealException --> dealId : ' + dealId + " | nodeId : " + nodeId );
	$('<input />').attr('type', 'hidden').attr('name', 'dealId').attr('value', dealId).appendTo('#dealException');
	$('<input />').attr('type', 'hidden').attr('name', 'nodeId').attr('value', nodeId).appendTo('#dealException');
	$("#dealException").attr("action", "dealException_edit.do");
	$('#dealException').submit();
	
}

function togglePartnerLinks() {
	if ($('input[type="checkbox"]:checked').length > 0) {
		$("#deleteAllPExceptions").attr('href', 'javascript:deleteAllPartner();').removeClass('disableButton'); 
		 
	} else {
		$("#deleteAllPExceptions").removeAttr('href').addClass('disableButton'); 
		
	}
}

function toggleAddNodes(){
	if ($('input[type="checkbox"]:checked').length > 0) {
		$("#addNodes").show(); 
		 
	} else {
		$("#addNodes").hide(); 
		
	}
}

function toggleDealLinks() {
	if ($('input[type="checkbox"]:checked').length > 0) {
		$("#deleteAllDExceptions").attr('href', 'javascript:deleteAllDeal();').removeClass('disableButton'); 
		 
	} else {
		$("#deleteAllDExceptions").removeAttr('href').addClass('disableButton'); 
		
	}
}

function reloadPartnerGrid() {
	if (typeof(partnerGrid) != "undefined") {
		partnerGrid.datagrid('reload');
	}
	
}

function reloadDealGrid() {
	if (typeof(dealGrid) != "undefined") {
		dealGrid.datagrid('reload');
	}
	
}