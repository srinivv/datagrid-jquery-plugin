if (!pse) {
	pse = {};
}

pse.rule = {
	marshall : function(ruleObj) {
		var extractCondition = function(condition, exprArray) {
			if(condition && condition.length > 0) {
				var preCons = condition.split(",");
				for ( var j = 0; j < preCons.length; j++) {
					if (preCons[j] === "START_YELLOW") {
						exprArray[exprArray.length] = " ( ";
					} else if (preCons[j] === "END_YELLOW") {
						exprArray[exprArray.length] = " ) ";
					} else if (preCons[j] === "AND") {
						exprArray[exprArray.length] = " && ";
					} else if (preCons[j] === "OR") {
						exprArray[exprArray.length] = " || ";
					}
				}
			}
		};
		
		var extractExpression = function(expressionArray) {
			var stringRV = new Array();
			for(var i = 0; i < expressionArray.length; i++) {
				var exprNode = expressionArray[i];
				extractCondition(exprNode.preCondition, stringRV);
				stringRV[stringRV.length] = "'"+exprNode.value+"'";
				extractCondition(exprNode.postCondition, stringRV);
			}
			return stringRV.join();
		};

		var extractLeaf = function(leafObject) {
			var returnObject = new Object();
			if (leafObject.type == "Boolean") {
				returnObject.type = "Boolean";
				returnObject.partnerType = extractExpression(leafObject.data[0]);
				returnObject.expression = extractExpression(leafObject.data[1]);
				returnObject.qualRuleCountry = leafObject.qualRuleCountry;
			} else if (leafObject.type == "ARITHMETIC") {
				returnObject.type = "ARITHMETIC";
				returnObject.operand = leafObject.operand;
				returnObject.operator = leafObject.operator;
				returnObject.operandValue = leafObject.operandValue;
			} else if (leafObject.type == "CustomerProfile") {
				returnObject.type = "CustomerProfile";
			}
			return returnObject;
		};

		var extractScenario = function(scenarioObject) {
			var returnObject = new Object();
			returnObject.expression = new Array();
			var leaf = undefined;
			for ( var i = 0; i < scenarioObject.leafCollection.length; i++) {
				leaf = scenarioObject.leafCollection[i];
				extractCondition(leaf.preConnector, returnObject.expression);
				returnObject.expression[returnObject.expression.length] = extractLeaf(leaf);
				extractCondition(leaf.postConnector, returnObject.expression);
			}
			return returnObject;
		};

		var oRule = new Object();
		oRule.name = ruleObj.preConditions.name;
		oRule.nodeID = ruleObj.nodeID;
		oRule.preConditions = new Object();
		oRule.preConditions.intendedUse = ruleObj.preConditions.intendedUse;
		oRule.preConditions.routeToMarket = ruleObj.preConditions.applyRuleFor;
		oRule.expression = new Array();
		var totalScenarios = ruleObj.scenarios.length;
		var scenario = undefined;
		for ( var i = 0; i < totalScenarios; i++) {
			scenario = ruleObj.scenarios[i];
			extractCondition(scenario.preConnector, oRule.expression);
			oRule.expression[oRule.expression.length] = extractScenario(scenario);
			extractCondition(scenario.postConnector, oRule.expression);
		}
		return oRule;
	},

	unmarshall : function(oRule) {
		var operators = [" ( ", " ) ", " && "," || "];
		var operatorValues = ["START_YELLOW", "END_YELLOW", "AND","OR"];
		var exprOperators = [" START ", " END ", " AND "," OR "];
		
		var createExpression = function(iExpr) {
			var retArr = new Array();
			var token = new Object();
			var preCondition = true;
			for(var i = 0; i < iExpr.length; i++) {
				var operatorIndex = operators.indexOf(iExpr[i]); 
				if(operatorIndex != -1) {
					if(preCondition) {
						if(token.preCondition && token.preCondition.length > 0) {
							token.preCondition += ",";
						} else {
							token.preCondition = " ";
						}
						token.preCondition = operatorValues[operatorIndex];
					} else {
						if(token.postCondition && token.postCondition.length > 0) {
							token.postCondition += ",";
						} else {
							token.postCondition = " ";
						}
						token.postCondition = operatorValues[operatorIndex];
					}
				} else {
					if(!preCondition) {
						retArr[retArr.length] = token; 
						token = new Object();
					} else {
						preCondition = false;
					}
					token.value = iExpr[i];
				}
			}
			return retArr;
		};
		var extractLeaf = function(tLeaf, sLeaf) {
			if (sLeaf.type == "Boolean") {
				tLeaf.type = "Boolean";
				tLeaf.data = new Array();
				tLeaf.data[0] = createExpression(sLeaf.partnerType);
				tLeaf.data[1] = createExpression(sLeaf.expression);
				tLeaf.qualRuleCountry = sLeaf.qualRuleCountry;
			} else if (sLeaf.type == "ARITHMETIC") {
				tLeaf.type = "ARITHMETIC";
				tLeaf.operand = sLeaf.operand;
				tLeaf.operator = sLeaf.operator;
				tLeaf.operandValue = sLeaf.operandValue;
			} else if (sLeaf.type == "CustomerProfile") {
				tLeaf.type = "CustomerProfile";
			}
			return tLeaf;
		};
		
		var extractScenario = function(scenarioObj) {
			var leafCollection = new Array();
			var leaf = new Object();
			var preCondition = true;
			for(var i = 0; i < scenarioObj.expression.length; i++) {
				var operatorIndex = operators.indexOf(scenarioObj.expression[i]); 
				if(operatorIndex != -1) {
					if(preCondition) {
						if(leaf.preCondition && leaf.preCondition.length > 0) {
							leaf.preCondition += ",";
						} else {
							leaf.preCondition = " ";
						}
						leaf.preCondition = operatorValues[operatorIndex];
					} else {
						if(leaf.postCondition && leaf.postCondition.length > 0) {
							leaf.postCondition += ",";
						} else {
							leaf.postCondition = " ";
						}
						leaf.postCondition = operatorValues[operatorIndex];
					}
				} else {
					if(!preCondition) {
						leafCollection[leafCollection.length] = leaf; 
						leaf = new Object();
					} else {
						preCondition = false;
					}
					extractLeaf(leaf, scenarioObj.expression[i]);
				}
			}
			return leafCollection;
		};
		var ruleObj = new Object();
		ruleObj.name = oRule.name;
		ruleObj.nodeID = oRule.nodeID;
		ruleObj.preConditions = new Object();
		ruleObj.scenarios = new Array();
		var scenario = new Object();
		var preCondition = true;
		for(var i = 0; i < oRule.expression.length; i++) {
			var operatorIndex = operators.indexOf(oRule.expression[i]); 
			if(operatorIndex != -1) {
				if(preCondition) {
					if(scenario.preCondition && scenario.preCondition.length > 0) {
						scenario.preCondition += ",";
					} else {
						scenario.preCondition = " ";
					}
					scenario.preCondition = operatorValues[operatorIndex];
				} else {
					if(scenario.postCondition && scenario.postCondition.length > 0) {
						scenario.postCondition += ",";
					} else {
						scenario.postCondition = " ";
					}
					scenario.postCondition = operatorValues[operatorIndex];
				}
			} else {
				if(!preCondition) {
					ruleObj.scenarios[ruleObj.scenarios.length] = scenario; 
					scenario = new Object();
				} else {
					preCondition = false;
				}
				scenario.leafCollection = extractScenario(oRule.expression[i]);
			}
		}
		return ruleObj;
	}
};