$("document").ready(function(){
	var	  tabTemplate = "<li><a href='#{href}'>#{label}</a> <span class='ui-icon ui-icon-close'>Remove Tab</span></li>",
	tabCounter = 1;
	//Now show the tab.
    var tabs = $( "#tabs" ).tabs();	
    $targetTabId = null;
	/**
 	 * If the user comes to Rule,we assume that he has some rules to be edited.
	 * Render the rules thats stored in LocalStorage or from the server.
	 */
 	
 	(function($) {
	 jQuery.fn.renderRules=function(ruleObj) {
		// console.log(ruleObj);		 
		 //Start with Building the tabs. STEP 1 
		$targetTabId= buildTabs(ruleObj);
		var firstScenarioDOM = $('.nodesenario1');
		//Build the components in the initial tab. STEP 2
		renderRuleScenarioComponents();
		 //Open the first tab
	    $("#tabs").tabs({selected: 0});
		
	//Step 2 Render Rule Scenario Components. START
		function renderRuleScenarioComponents(){
			var temp = ruleObj.scenario;					
			//Iterate through the Rule Object and get the Scenario
			for (var index = 0; index < temp.length; index++) {
				//Always build the subsequent Scenario after a leaf is rendered.
				buildScenario(temp[index]);
				//Start building the Scenario flow		
				buildLeafCollection(temp[index].leafCollection);
			}
		}
	//Step 2 Render Rule Scenario Components. END		
	/**
	 * Render the scenario now.
	 */
	function buildScenario(scenarioObj){
		//Find the Tab where are going to be added		
		$tabPanel = "#" + $targetTabId;		
		//First check the previous scenario and find the last leaf being added.Accordingly adjust
		//the rendering of this new scenario and position it accordingly.
		var lastNodeScenarioInDOM=$($tabPanel).find(".nodesenario1:last");	
			
		//If LastNodeScenarioDOM is not available,then create a new Scenario START		
		if(lastNodeScenarioInDOM.length == 0){			
			templateDefault =_.template($('#node-scenario-template').html(), { cssName: "",top: '0px',tierArea:''});
			$($tabPanel).find('.nodeMainArea').append(templateDefault);
			lastNodeScenarioInDOM=$($tabPanel).find(".nodesenario1:last");	
		}else{			
			//If LastNodeScenarioDOM is not available,then create a new Scenario END		
			//Once we know the last scenario in DOM,now we see the last leaf right into this DOM.Accordingly we position
			//the new Scenario we are going to add.
			$lastLeafAdded = $(lastNodeScenarioInDOM).children('.nodesenario1:last');		
			//First see the last NodeScenario in the DOM
			lastNodeScenarioInDOM=$($tabPanel).find(".nodesenario1:last");				
			//Check if the last leaf is available or not..If not we get error
			if($lastLeafAdded.length == 0 ){
				$lastNodeHeight = $(lastNodeScenarioInDOM).position().top;				
			}else{
				//Well.we have a leaf available in previous node.So get the position and display this Scenario accordingly.
				$lastNodeHeight = $($lastLeafAdded).position().top;					
			}			
			//Find the height style of the previous elements.
			//alert($(lastNodeScenarioInDOM).css("top"));
			
			//add 200 px to this
			$nodeHeight = $lastNodeHeight + 300;			
			//alert($nodeHeight);	
			//The Tier to all the scenario.Make it dynamic also.
			//$('.tierArea').append(_.template($('#tier-border-scenario').html(), {height: ($nodeHeight) + 'px' }));	
			$tierAreaTemplate = _.template($('#tier-border-scenario').html(), {height: ($nodeHeight) + 'px' });			   
		    //The acutal scenario to be added.
		    $('.nodeMainArea').append(_.template($('#node-scenario-template').html(), { cssName: ' nodesenario2', top: $nodeHeight+ 'px' ,tierArea:$tierAreaTemplate}));
		    $('.tierBorder').show();
		    $('.tierBorder').animate(500);
		}
	}
	
	// Build Leaf START
	function buildLeafCollection(leafCollection){		
		//Iterate leaf collection to access the data for all the components in that leaf.
		for (var index = 0; index < leafCollection.length; index++) {
			var temp = leafCollection[index].data;
			//If leafCollection is more than one...put the template back into the DOM.
			if(index != 0){				
				//Appending leaf is different from appending the first scenario.
				appendLeafToDOM(temp);
			}else{
				//Now access each components			
				buildEachComponent(temp,firstScenarioDOM);
			}
		}		
	}	
	//Step 4 Build Each components START 
	function buildEachComponent(dataHolder,targetScenarioDOM){
			//******************* For Partner Type START **************************************		
			$componentSelected =$(targetScenarioDOM).children('.nodeblue.position1');	
			//Marshall it to the Scenario Components.
			var unMarshalledDataHolder  = unMarshallToScenarioComponent(dataHolder[0]);
			//Set the data attribute in the node as its not available 
			$componentSelected.data("dataHolder",unMarshalledDataHolder);			
			//Now Render the Components for partner Type.
			unMarshalledDataHolder.setConditionsForPartnerType($componentSelected);			
			/**
			 * START Position 9 
			 */
			//set it for partner Type in position 9 in a leaf.ie the last one.
			$componentSelectedPosition9 = $(targetScenarioDOM).children('.nodeblue.position9');			
			var partnerTypePosition9Data  = unMarshallToScenarioComponent(dataHolder[3]);
			//Set the data attribute in the node as its not available 
			$componentSelectedPosition9.data("dataHolder",partnerTypePosition9Data);			
			//Now Render the Components for partner Type.
			partnerTypePosition9Data.setConditionsForPartnerPosition9($componentSelectedPosition9,unMarshalledDataHolder);
						
			/**
			 * END Position 9 
			 */
			//******************* For Partner Type END **************************************	
			//******************* For Qualification Type START	*****************************
			$componentSelected = $(targetScenarioDOM).children('.nodeyellow.position2');			
			//Marshall it to the Scenario Components.
			var unMarshalledDataHolder  = unMarshallToScenarioComponent(dataHolder[1]);
			//Set the data attribute in the node as its not available 
			$componentSelected.data("dataHolder",unMarshalledDataHolder);			
			//Now Render the Components for partner Type.
			unMarshalledDataHolder.setConditionsForQualifications($componentSelected);
			//******************* For Qualification Type END *****************************
			
			//***************************** For Country Type START	*****************************	
			$componentSelected = $(targetScenarioDOM).children('.nodeblue.position3');			
			//Marshall it to the Scenario Components.
			var unMarshalledDataHolder  = unMarshallToScenarioComponent(dataHolder[2]);
			//Set the data attribute in the node as its not available 
			$componentSelected.data("dataHolder",unMarshalledDataHolder);			
			//Now Render the Components for partner Type.
			unMarshalledDataHolder.setConditionsForCountryType($componentSelected);	  
			//***************************** For Country Type END *****************************				
	}
	//Build Leaf components END
	
	//Step 5 Marshall to Scenario Component START
	function unMarshallToScenarioComponent(dataHolder){
		//console.log(dataHolder);
		var tempArray = new Array();
		if(dataHolder == undefined && dataHolder ==null){
			return tempArray;
		}
		//Iterate and type cast to Scenario Object
		for (var index = 0; index < dataHolder.length; index++) {
			var tempObj = dataHolder[index];			
			var scenarioObj = 
					new ScenarioComponents(tempObj.id,tempObj.name,tempObj.preCondition,tempObj.postCondition,tempObj.postConditionText,tempObj.preConditionText,"","");
			tempArray.push(scenarioObj);
		}
		//Returns Array of Scenario Component.
		return tempArray;
	}
	
	//Step 5 Marshall to Scenario Component END	
	   
	//Append Leaf to the DOM but not the first one.
	function appendLeafToDOM(dataHolder){
		$justAddedLeafDOM = autoPositionLeafs();
		//Now build the components and populate the data we just added so far.
		buildEachComponent(dataHolder,$justAddedLeafDOM);
	}
	/**
	 * For positioning Leafs,redundant code from rule_script.js for creating rules.
	 */
	function autoPositionLeafs(){
   	 	$scenarioTopLevel1 =  $('.nodesenario1').children('.position9');
   	 	//The place after which the last leaf to be inserted.
		$leafToBeInserted = $($scenarioTopLevel1).children('.nodesenario3:last');
		 
		if($leafToBeInserted.length == 0){
	   		 //alert("No leaf yet");
	   		//Get the height of the previous component and set the relative top and position
	       	 $previousNodeHeight = $($scenarioTopLevel1).position().top;	       	 
	       	// alert($previousNodeHeight);
	       	 $acutalHeight = $previousNodeHeight + 120;
	       	//Get the template we want to insert to
	       	 $template = _.template($('#node-scenario-another-leaf-template').html(), { cssName: 'nodesenario2', top: $acutalHeight + 'px',position:'absolute'});
	       	 $($scenarioTopLevel1).after($template);
	     }else{
    		//This means already a leaf is added to this scenario other than the default ones
    		//Get the height of the previous component and set the relative top and position
	       	 $previousNodeHeight = $($leafToBeInserted).position().top;
	       	 $acutalHeight = $previousNodeHeight + 120;
	       	// alert($acutalHeight);
	       	//Get the template we want to insert to
	       	 $template = _.template($('#node-scenario-another-leaf-template').html(), { cssName: 'nodesenario2', top: $acutalHeight + 'px',position:'absolute'});
	       	 $($leafToBeInserted).after($template);
	       	 //Before we insert the leaf,we need to make sure the leaf and scenario does not overlap.
	       	 repositionOVerlappingElements($scenarioTopLevel);       
    	 }
		//Get the DOM for the one we added right now.
		return $('.nodesenario1').find('.nodesenario3');
	}
	
	
	
	//STEP 1 Adding tabs for each rule.Jquery UI tab functionality.Check documentation for any details. START
	    function buildTabs(ruleObj) {
	      var label = 'Business Rule ',
	        id = "tabs-" + tabCounter,
	        li = $( tabTemplate.replace( /#\{href\}/g, "#" + id ).replace( /#\{label\}/g, label ) ),
	        tabContentHtml = _.template($('#rule-tab-template').html());
	 
	      tabs.find( ".ui-tabs-nav" ).append( li );
	      //templateDefault =_.template($('#node-scenario-template').html(), { id:id,cssName: "",top: '0px',tierArea:''});
	      tabs.append( _.template($('#rule-tab-template').html(),{id:id}));  
	      //Show Default Scenario.
	      //tabs.find('.nodeMainArea').append(templateDefault);
	      //Refresh the tabs.
	      tabs.tabs( "refresh" );
	      tabCounter++;
	      //return tabs.find('.nodeMainArea');
	      return id;
	    }	   
    //STEP 1 Adding tabs for each rule.Jquery UI tab functionality.Check documentation for any details. END
	 };})(jQuery); 
 	
/**
 * Edit Rule.When the user edits the Rule or When the user switches between rule tabs.
 */
	//HTML 5 storage END 
	//As of now,its HTML5 but should come from server.
 	var storedData = localStorage.getItem("rule");
 	if (storedData) {
 	  listdata = JSON.parse(storedData);
 	  //console.log(listdata); 	 
 	  $(".someDummySelector").renderRules(listdata); 	  
 	} 	 	
 
 	
}); 	
 
 
	